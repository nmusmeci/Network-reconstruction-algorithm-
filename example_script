import networkx as nx

# Generate the original network
G = nx.Graph()
G.add_nodes_from([1,2,3,4,5])
G.add_edges_from([(1,2),(2,3),(1,4),(1,5)])
G.node[1]['fitness']=30   
G.node[2]['fitness']=20
G.node[3]['fitness']=10
G.node[4]['fitness']=12
G.node[5]['fitness']=8

seeds=[1]    # Subsets of nodes whose neighbours are known by the algorithm
G.remove_edges_from([(2,3)])    # Remove information about edges that are not linked to seeds
z = computeZfromGraph(seeds,G)    # Estimate 'z' with MLE from seeds
G0 = fitModelz(G,z)            # Generate a reconstructed network from 
